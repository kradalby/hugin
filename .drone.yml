---
{
  "kind": "pipeline",
  "name": "Kubernetes",
  "node_selector": { "drone": true },
  "platform": { "arch": "amd64", "os": "linux" },
  "steps":
    [
      {
        "commands":
          [
            "npm install prettier",
            'npx prettier --check "**/*.{ts,js,md,yaml,yml,sass,css,scss}"',
          ],
        "image": "node:lts-buster",
        "name": "Prettier lint",
        "pull": "always",
      },
      {
        "commands":
          [
            "npm install elm-analyse elm-format",
            "npx elm-analyse",
            "npx elm-format --validate src/",
          ],
        "image": "node:lts-buster",
        "name": "Elm lint",
        "pull": "always",
      },
      {
        "image": "banzaicloud/drone-kaniko:0.5.1",
        "name": "Build container image",
        "pull": "always",
        "trigger": { "event": ["pull_request"] },
        "when": { "branch": { "exclude": ["master"] } },
      },
      {
        "environment":
          {
            "HUGIN_MAPBOX_ACCESS_TOKEN":
              { "from_secret": "hugin_mapbox_access_token" },
            "HUGIN_ROLLBAR_ACCESS_TOKEN":
              { "from_secret": "hugin_rollbar_access_token" },
            "HUGIN_SENTRY_DSN": { "from_secret": "hugin_sentry_dsn" },
          },
        "image": "banzaicloud/drone-kaniko:0.5.1",
        "name": "Publish image kradalby/hugin",
        "pull": "always",
        "settings":
          {
            "build_args_from_env":
              [
                "HUGIN_MAPBOX_ACCESS_TOKEN",
                "HUGIN_ROLLBAR_ACCESS_TOKEN",
                "HUGIN_SENTRY_DSN",
              ],
            "password": { "from_secret": "docker_password" },
            "repo": "kradalby/hugin",
            "tags":
              [
                "latest",
                "latest-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}",
                "${DRONE_COMMIT_SHA:0:8}",
              ],
            "username": { "from_secret": "docker_username" },
          },
        "when": { "branch": ["master"], "event": ["push"] },
      },
      {
        "commands":
          [
            'container-file-extractor "kradalby/hugin" "${DRONE_COMMIT_SHA:0:8}" "usr/share/nginx/html"',
            "mkdir -p dist/",
            "mv output/usr/share/nginx/html/* dist/.",
          ],
        "image": "kradalby/container-file-extractor:latest",
        "name": "Extract from container",
        "pull": "always",
        "when": { "branch": ["master"], "event": ["push"] },
      },
      {
        "environment": { "SSH_KEY": { "from_secret": "ssh_key" } },
        "image": "appleboy/drone-scp",
        "name": "Deploy with scp",
        "pull": "always",
        "settings":
          {
            "host": "core.terra.fap.no",
            "rm": true,
            "source": ["dist/*"],
            "strip_components": 1,
            "target": "/fastest/serve/hugin",
            "username": "deploy",
          },
        "when": { "branch": ["master"], "event": ["push"] },
      },
      {
        "image": "appleboy/drone-discord",
        "name": "Notify Discord",
        "pull": "always",
        "settings":
          {
            "message": "{{#success build.status}}\n‚úÖ  Build #{{build.number}} of `{{repo.name}}` succeeded.\n\nüìù  Commit by {{commit.author}} on `{{commit.branch}}`:\n``` {{commit.message}} ```\nüåê  {{ build.link }}\n\n‚úÖ  duration: {{duration build.started build.finished}}\n‚úÖ  started: {{datetime build.started \"2006/01/02 15:04\" \"UTC\"}}\n‚úÖ  finished: {{datetime build.finished \"2006/01/02 15:04\" \"UTC\"}}\n\n{{else}}\n@everyone\n‚ùå  Build #{{build.number}} of `{{repo.name}}` failed.\n\nüìù  Commit by {{commit.author}} on `{{commit.branch}}`:\n``` {{commit.message}} ```\nüåê  {{ build.link }}\n\n‚úÖ  duration: {{duration build.started build.finished}}\n‚úÖ  started: {{datetime build.started \"2006/01/02 15:04\" \"UTC\"}}\n‚úÖ  finished: {{datetime build.finished \"2006/01/02 15:04\" \"UTC\"}}\n\n{{/success}}\n",
            "webhook_id": { "from_secret": "discord_webhook_id" },
            "webhook_token": { "from_secret": "discord_webhook_token" },
          },
        "when": { "status": ["success", "failure"] },
      },
    ],
  "type": "kubernetes",
}
