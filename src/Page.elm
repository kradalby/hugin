module Page exposing (Page(..), view)

{-| The frame around a typical page - that is, the header and footer.
-}

--import Route exposing (Route)

import Browser exposing (Document)
import Data.Url
import Html exposing (..)
import Html.Attributes exposing (..)


{-| Determines which navbar link (if any) will be rendered as active.

Note that we don't enumerate every page here, because the navbar doesn't
have links for every page. Anything that's not part of the navbar falls
under Other.

-}
type Page
    = Other
    | Album Data.Url.Url
    | Photo Data.Url.Url
    | Keyword Data.Url.Url
    | Locations Data.Url.Url


{-| Take a page's Html and frame it with a header and footer.

The caller provides the current user, so we can display in either
"signed in" (rendering username) or "signed out" mode.

isLoading is for determining whether we should show a loading spinner
in the header. (This comes up during slow page transitions.)

-}
view : Page -> { title : String, content : Html msg } -> Document msg
view page { title, content } =
    { title = title ++ " - Hugin"
    , body = viewHeader page :: content :: [ viewFooter ]
    }


viewHeader : Page -> Html msg
viewHeader page =
    nav [ class "navbar navbar-expand-md navbar-dark bg-dark pl-1" ]
        [ a [ class "navbar-brand flexiday-logo", href "#" ]
            [ text "" ]
        , div [ class "ml-auto row" ]
            [ div [ class "container" ]
                []
            ]
        ]


viewFooter : Html msg
viewFooter =
    footer [ class "footer" ]
        [ div [ class "container-fluid" ]
            [ div [ class "row" ]
                [ div [ class "col-sm-8 text-muted" ]
                    [ a [ href "https://github.com/kradalby/hugin" ] [ text "Hugin" ]
                    , text " is made with "
                    , a [ href "http://elm-lang.org" ] [ text "Elm " ]
                    , text "by "
                    , a [ href "https://kradalby.no" ] [ text " Kristoffer Dalby" ]
                    , text " backend is generated by "
                    , a [ href "https://github.com/kradalby/munin" ] [ text "Munin" ]
                    ]
                , div [ class "col-sm-4 text-muted text-right" ]
                    [ text
                        "Copyright 2019"
                    ]
                ]
            ]
        ]



--navbarLink : ActivePage -> Route -> List (Html msg) -> Html msg
--navbarLink page route linkContent =
--    li [ classList [ ( "nav-item", True ), ( "active", isActive page route ) ] ]
--        [ a [ class "nav-link", Route.href route ] linkContent ]
--
--
--isActive : ActivePage -> Route -> Bool
--isActive page route =
--    case ( page, route ) of
--        ( Album pageUrl, Route.Album routeUrl ) ->
--            Data.Url.urlToString pageUrl == routeUrl
--
--        ( Photo pageUrl, Route.Photo routeUrl ) ->
--            Data.Url.urlToString pageUrl == routeUrl
--
--        _ ->
--            False
--
--{-| This id comes from index.html.
--
--The Feed uses it to scroll to the top of the page (by ID) when switching pages
--in the pagination sense.
--
---}
--bodyId : String
--bodyId =
--    "page-body"
